service: serverless-boilerplate

custom:
  tableName: 'airline-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs8.10
  region: sa-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem 
      Resource:
        - { "Fn::GetAtt": ["AirlineDynamoDBTable", "Arn" ] }
  environment:
    AIRLINE_TABLE: ${self:custom.tableName}

plugins:
  - serverless-offline

package:
  exclude:
    - .git/**
    - src/**
    - test/**
    - nodemon.json
    - README.md

functions:
  index:
    handler: dist/index.handler
    events:
    - http:
        cors: true
        path: '/'
        method: any
    - http:
        cors: true
        path: '{proxy+}'
        method: any
resources:
  Resources:
    AirlineDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          - 
            AttributeName: name
            AttributeType: S

        KeySchema:
          -
            AttributeName: id
            KeyType: HASH

          - AttributeName: name
            KeyType: RANGE 
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}